{"version":3,"sources":["components/ContactEdit/ContactEdit.jsx","components/ContactView/ContactView.jsx","components/ContactsTable/ContactsTable.jsx","components/FormField/FormField.jsx","components/HomeList/HomeList.jsx","App.jsx","index.js"],"names":["ContactEdit","contacts","setContacts","personalId","useParams","newContact","find","x","id","useState","firstname","firstName","setFirstName","lastname","lastName","setLastName","city","newCity","setCity","email","newEmail","setEmail","tel","phone","setPhone","onSubmit","event","preventDefault","window","confirm","alert","newArr","map","contact","oldContact","prev","console","log","handleSubmit","className","type","value","onChange","target","required","pattern","to","onClick","undefined","ContactPerson","deleteContact","ContactsTable","FormField","addContact","length","placeholder","HomeList","App","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","contactId","filter","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5ba7a525.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './ContactEdit.scss';\n\nconst ContactEdit = ({contacts, setContacts}) => {\n  const { personalId } = useParams();\n\n  let newContact = contacts.find(x => x.id === +personalId);\n\n  const [firstName, setFirstName] = useState(newContact.firstname);\n  const [lastName, setLastName] = useState(newContact.lastname);\n  const [newCity, setCity] = useState(newContact.city);\n  const [newEmail, setEmail] = useState(newContact.email);\n  const [phone, setPhone] = useState(newContact.tel);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let change = window.confirm('Do you want to change?');\n\n    if (change) {\n      alert(`Your contact was changed. Please, click Back.`);\n\n      const newArr = contacts.map(contact => {\n        if (contact.id === newContact.id) {\n          const oldContact = {...contact};\n\n          contact.firstname = firstName;\n          contact.lastname = lastName;\n          contact.city = newCity;\n          contact.email = newEmail;\n          contact.tel = phone;\n          contact.prev = oldContact;\n        }\n\n        return contact;\n      })\n\n      setContacts([...newArr])\n    } else {\n      alert(`Your contact wasn't change. Please, click Back.`);\n\n      setFirstName(newContact.firstName)\n      setLastName(newContact.lastName)\n      setCity(newContact.city)\n      setEmail(newContact.email)\n      setPhone(newContact.tel)\n    }\n\n    console.log(contacts);\n  }\n\n  const changeContact = () => {\n    if (newContact.prev !== undefined) {\n      \n      setFirstName(newContact.prev.firstname)\n      setLastName(newContact.prev.lastname)\n      setCity(newContact.prev.city)\n      setEmail(newContact.prev.email)\n      setPhone(newContact.prev.tel)\n    }\n  }\n\n  return (\n    <>\n      {newContact && (\n        <>\n          <form \n            onSubmit={event => handleSubmit(event)}\n            className='form'\n          >\n\n            <input\n              type=\"text\"\n              value={firstName}\n              onChange={event => {\n                setFirstName(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"text\"\n              value={lastName}\n              onChange={event => {\n                setLastName(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"text\"\n              value={newCity}\n              onChange={event => {\n                setCity(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"email\"\n              value={newEmail}\n              onChange={event => {\n                setEmail(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input \n              type=\"tel\"\n              pattern='[0-9]{3}[0-9]{3}[0-9]{4}'\n              value={phone}\n              onChange={event => {\n                setPhone(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <div>\n              <button type='submit' className='button__edit'>Change</button>\n\n              <Link to='/react_contact-app/'>\n                <button className='button__edit'>\n                  Back\n                </button>\n              </Link>\n\n              <button\n                type='button'\n                className='button__edit button__edit-return'\n                onClick={changeContact}\n              >\n                Return\n              </button>\n            </div>\n          </form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ContactEdit;","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './ContactView.scss'\n\nconst ContactPerson = ({ contacts, deleteContact }) => {\n  const { personalId } = useParams();\n\n  const newContact = contacts.find(x => x.id === +personalId);\n  console.log(newContact);\n\n  return (\n    <div className='contact-view'>\n      <div className='contact-view__info'>\n        {newContact ? (\n          <>\n            <p>Id: {newContact.id}</p>\n            <p>First name: {newContact.firstname}</p>\n            <p>Last name: {newContact.lastname}</p>\n            <p>City: {newContact.city}</p>\n            <p>Email: {newContact.email}</p>\n            <p>Phone: {newContact.tel}</p>\n          </>\n        ) : (\n          <>\n            <p className=''>You deleted this contact</p>\n            <p className=''>Please, click <b>Back</b>.</p>\n          </>\n        )}\n      </div>\n\n      <div className='contact-view__bottom'>\n        {newContact ? (\n          <>\n            <Link to='/react_contact-app/' className='contact-view__button'>Back</Link>\n\n            <button\n              className='contact-view__button contact-view__button-delete'\n              onClick={() => deleteContact(newContact.id)}\n            >\n              Delete\n            </button>\n\n            <Link to={`/react_contact-app/edit/${newContact.id}`} className='contact-view__button'>Edit</Link> \n          </>\n        ) : (\n          <>\n            <Link to='/react_contact-app/' className='contact-view__button'>Back</Link>\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ContactPerson;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ContactsTable.scss';\n\nconst ContactsTable = ({contacts, deleteContact}) => {\n  return (\n    <div className='contact'>\n      <table className='table'>\n        <thead className='table__head'>\n          <tr className='table__title'>\n            <th>ID</th>\n            <th>First name</th>\n            <th>Last name</th>\n            <th>City</th>\n            <th>Email</th>\n            <th>Phone</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map(contact => {\n          return (\n            <tr key={contact.id}>\n              <td>{contact.id}</td>\n              <td>{contact.firstname}</td>\n              <td>{contact.lastname}</td>\n              <td>{contact.city}</td>\n              <td>{contact.email}</td>\n              <td>{contact.tel}</td>\n              <td>\n                <Link\n                  to={`/react_contact-app/edit/${contact.id}`}\n                  className='table__button'\n                >\n                  Edit\n                </Link>\n\n                <div\n                  onClick={() => deleteContact(contact.id)}\n                  className='table__button table__button-delete'\n                >\n                  Delete\n                </div>\n\n                <Link\n                  to={`/react_contact-app/contacts/${contact.id}`}\n                  className='table__button'\n                >\n                  View\n                </Link>\n              </td>\n            </tr>\n          )\n        })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ContactsTable;","import React, { useState } from 'react';\nimport './FormField.scss';\n\nconst FormField = ({addContact, contacts}) => {\n  const [firstName, setFirstName] = useState();\n  const [lastName, setLastName] = useState();\n  const [city, setCity] = useState();\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: contacts.length + 1,\n      firstname: firstName,\n      lastname: lastName,\n      city: city,\n      email: email,\n      tel: phone,\n      prev: null,\n    }\n\n    console.log(contacts);\n\n    addContact(newContact)\n\n    setFirstName('');\n    setLastName('')\n    setCity('')\n    setEmail('');\n    setPhone('');\n  }\n\n  return (\n    <div>\n      <form\n        onSubmit={event => handleSubmit(event)}\n        className='form'\n      >\n\n        <input\n          type=\"text\"\n          placeholder='First name'\n          value={firstName}\n          onChange={event => {\n            setFirstName(event.target.value);\n          }}\n          className='form__field'\n          required\n        />\n\n        <input\n          type=\"text\"\n          placeholder='Last name'\n          value={lastName}\n          onChange={event => {\n            setLastName(event.target.value);\n          }}\n          className='form__field'\n          required\n        />\n\n        <input\n          type=\"text\"\n          placeholder='City'\n          value={city}\n          onChange={event => {\n            setCity(event.target.value);\n          }}\n          className='form__field'\n          required\n        />\n\n        <input\n          type=\"email\"\n          placeholder='Email: name@gmail.com'\n          value={email}\n          onChange={event => {\n            setEmail(event.target.value);\n          }}\n          className='form__field'\n          required\n        />\n\n        <input\n          type=\"tel\"\n          pattern='[0-9]{3}[0-9]{3}[0-9]{4}'\n          placeholder='Phone: 123-456-7890'\n          value={phone}\n          onChange={event => {\n            setPhone(event.target.value);\n          }}\n          className='form__field'\n          required\n        />\n\n        <button type='submit' className='button-add'>Add contact</button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormField;","import React from 'react';\nimport ContactsTable from '../ContactsTable/ContactsTable';\nimport FormField from '../FormField/FormField';\n\nconst HomeList = ({\n  addContact,\n  contacts,\n  deleteContact,\n}) => {\n  return (\n    <>\n      <FormField\n        addContact={addContact}\n        contacts={contacts}\n      />\n\n      {contacts.length ? (\n        <ContactsTable\n          contacts={contacts}\n          deleteContact={deleteContact}\n        />\n      ) : (\n        <p></p>\n      )}\n      \n    </>\n  );\n};\n\nexport default HomeList;","import { useEffect, useState } from 'react';\nimport {Routes, Route, Link} from 'react-router-dom';\nimport './App.scss';\nimport ContactEdit from './components/ContactEdit/ContactEdit';\nimport ContactPerson from './components/ContactView/ContactView';\nimport HomeList from './components/HomeList/HomeList';\n\nfunction App() {\n\n  const [contacts, setContacts] = useState(\n    JSON.parse(localStorage.getItem('contacts')) || [],\n  );\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (newContact) => {\n    setContacts([...contacts, newContact]);\n  }\n\n  const deleteContact = (contactId) => {\n    let del = window.confirm('Do you want delete?');\n\n    if(del) {\n      setContacts(contacts.filter(contact => contact.id !== contactId));\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header className='header'>\n        <Link to='/react_contact-app/' className='header__title'>\n          Contact App\n        </Link>\n      </header>\n      <Routes>\n        <Route\n          path='/react_contact-app/'\n          element={<HomeList\n            addContact={addContact}\n            contacts={contacts}\n            deleteContact={deleteContact}\n          />}\n        />\n\n        <Route\n          path='/react_contact-app/contacts/:personalId'\n          element={<ContactPerson \n            contacts={contacts}\n            deleteContact={deleteContact}\n            />\n          }\n        />\n\n        <Route\n          path='/react_contact-app/edit/:personalId'\n          element={<ContactEdit\n            contacts={contacts}\n            setContacts={setContacts}\n            />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}