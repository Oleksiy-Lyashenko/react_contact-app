{"ast":null,"code":"import _toConsumableArray from\"/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import{Routes,Route,Link}from'react-router-dom';import'./App.scss';import ContactEdit from'./components/ContactEdit/ContactEdit';import ContactPerson from'./components/ContactView/ContactView';import HomeList from'./components/HomeList/HomeList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(JSON.parse(localStorage.getItem('contacts'))||[]),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];useEffect(function(){localStorage.setItem('contacts',JSON.stringify(contacts));},[contacts]);var addContact=function addContact(newContact){setContacts([].concat(_toConsumableArray(contacts),[newContact]));};var deleteContact=function deleteContact(contactId){var del=window.confirm('Do you want delete?');if(del){setContacts(contacts.filter(function(contact){return contact.id!==contactId;}));}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"header\",children:/*#__PURE__*/_jsx(Link,{to:\"/react_contact-app/\",className:\"header__title\",children:\"Contact App\"})}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/react_contact-app/\",element:/*#__PURE__*/_jsx(HomeList,{addContact:addContact,contacts:contacts,deleteContact:deleteContact})}),/*#__PURE__*/_jsx(Route,{path:\"/react_contact-app/contacts/:personalId\",element:/*#__PURE__*/_jsx(ContactPerson,{contacts:contacts,deleteContact:deleteContact})}),/*#__PURE__*/_jsx(Route,{path:\"/react_contact-app/edit/:personalId\",element:/*#__PURE__*/_jsx(ContactEdit,{contacts:contacts,setContacts:setContacts})})]})]});}export default App;","map":{"version":3,"sources":["/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/src/App.jsx"],"names":["useEffect","useState","Routes","Route","Link","ContactEdit","ContactPerson","HomeList","App","JSON","parse","localStorage","getItem","contacts","setContacts","setItem","stringify","addContact","newContact","deleteContact","contactId","del","window","confirm","filter","contact","id"],"mappings":"8TAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAAQC,MAAR,CAAgBC,KAAhB,CAAuBC,IAAvB,KAAkC,kBAAlC,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,CACA,MAAOC,CAAAA,aAAP,KAA0B,sCAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gCAArB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CAEb,cAAgCP,QAAQ,CACtCQ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,GAAgD,EADV,CAAxC,wCAAOC,QAAP,eAAiBC,WAAjB,eAIAd,SAAS,CAAC,UAAM,CACdW,YAAY,CAACI,OAAb,CAAqB,UAArB,CAAiCN,IAAI,CAACO,SAAL,CAAeH,QAAf,CAAjC,EACD,CAFQ,CAEN,CAACA,QAAD,CAFM,CAAT,CAIA,GAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,UAAD,CAAgB,CACjCJ,WAAW,8BAAKD,QAAL,GAAeK,UAAf,GAAX,CACD,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,SAAD,CAAe,CACnC,GAAIC,CAAAA,GAAG,CAAGC,MAAM,CAACC,OAAP,CAAe,qBAAf,CAAV,CAEA,GAAGF,GAAH,CAAQ,CACNP,WAAW,CAACD,QAAQ,CAACW,MAAT,CAAgB,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,EAAR,GAAeN,SAAnB,EAAvB,CAAD,CAAX,CACD,CAEF,CAPD,CASA,mBACE,aAAK,SAAS,CAAC,KAAf,wBACE,eAAQ,SAAS,CAAC,QAAlB,uBACE,KAAC,IAAD,EAAM,EAAE,CAAC,qBAAT,CAA+B,SAAS,CAAC,eAAzC,yBADF,EADF,cAME,MAAC,MAAD,yBACE,KAAC,KAAD,EACE,IAAI,CAAC,qBADP,CAEE,OAAO,cAAE,KAAC,QAAD,EACP,UAAU,CAAEH,UADL,CAEP,QAAQ,CAAEJ,QAFH,CAGP,aAAa,CAAEM,aAHR,EAFX,EADF,cAUE,KAAC,KAAD,EACE,IAAI,CAAC,yCADP,CAEE,OAAO,cAAE,KAAC,aAAD,EACP,QAAQ,CAAEN,QADH,CAEP,aAAa,CAAEM,aAFR,EAFX,EAVF,cAmBE,KAAC,KAAD,EACE,IAAI,CAAC,qCADP,CAEE,OAAO,cAAE,KAAC,WAAD,EACP,QAAQ,CAAEN,QADH,CAEP,WAAW,CAAEC,WAFN,EAFX,EAnBF,GANF,GADF,CAqCD,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport {Routes, Route, Link} from 'react-router-dom';\nimport './App.scss';\nimport ContactEdit from './components/ContactEdit/ContactEdit';\nimport ContactPerson from './components/ContactView/ContactView';\nimport HomeList from './components/HomeList/HomeList';\n\nfunction App() {\n\n  const [contacts, setContacts] = useState(\n    JSON.parse(localStorage.getItem('contacts')) || [],\n  );\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = (newContact) => {\n    setContacts([...contacts, newContact]);\n  }\n\n  const deleteContact = (contactId) => {\n    let del = window.confirm('Do you want delete?');\n\n    if(del) {\n      setContacts(contacts.filter(contact => contact.id !== contactId));\n    }\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header className='header'>\n        <Link to='/react_contact-app/' className='header__title'>\n          Contact App\n        </Link>\n      </header>\n      <Routes>\n        <Route\n          path='/react_contact-app/'\n          element={<HomeList\n            addContact={addContact}\n            contacts={contacts}\n            deleteContact={deleteContact}\n          />}\n        />\n\n        <Route\n          path='/react_contact-app/contacts/:personalId'\n          element={<ContactPerson \n            contacts={contacts}\n            deleteContact={deleteContact}\n            />\n          }\n        />\n\n        <Route\n          path='/react_contact-app/edit/:personalId'\n          element={<ContactEdit\n            contacts={contacts}\n            setContacts={setContacts}\n            />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}