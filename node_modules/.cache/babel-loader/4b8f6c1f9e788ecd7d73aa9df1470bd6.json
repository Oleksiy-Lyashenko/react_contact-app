{"ast":null,"code":"import _slicedToArray from\"/Users/oleksijlyashenko/Documents/projects_from_git/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import classNames from'classnames';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoItem=function TodoItem(_ref){var todo=_ref.todo,deleteTodo=_ref.deleteTodo,changeComplete=_ref.changeComplete,changeEditing=_ref.changeEditing,changeItem=_ref.changeItem;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),click=_useState2[0],setClick=_useState2[1];return/*#__PURE__*/_jsxs(\"li\",{className:classNames({completed:todo.completed},{editing:click}),onDoubleClick:function onDoubleClick(){changeEditing(todo.id);setClick(true);},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"view\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",className:\"toggle\",checked:todo.completed,onChange:function onChange(){return changeComplete(todo.id);}}),/*#__PURE__*/_jsx(\"label\",{children:todo.title}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"destroy\",onClick:function onClick(){return deleteTodo(todo.id);}})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"edit\",value:todo.title,onChange:function onChange(event){return changeItem(event.target.value,todo.id);},onKeyDown:function onKeyDown(event){if(event.key==='Enter'){setClick(false);}if(event.key==='Escape'){changeItem(todo.prevText,todo.id);setClick(false);}}})]},todo.id);};export default TodoItem;","map":{"version":3,"sources":["/Users/oleksijlyashenko/Documents/projects_from_git/todo-app/src/components/TodoItem.jsx"],"names":["React","useState","classNames","TodoItem","todo","deleteTodo","changeComplete","changeEditing","changeItem","click","setClick","completed","editing","id","title","event","target","value","key","prevText"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAMX,IALJC,CAAAA,IAKI,MALJA,IAKI,CAJJC,UAII,MAJJA,UAII,CAHJC,cAGI,MAHJA,cAGI,CAFJC,aAEI,MAFJA,aAEI,CADJC,UACI,MADJA,UACI,CACJ,cAA0BP,QAAQ,CAAC,KAAD,CAAlC,wCAAOQ,KAAP,eAAcC,QAAd,eAEA,mBACE,YAEE,SAAS,CAAER,UAAU,CACnB,CAAES,SAAS,CAAEP,IAAI,CAACO,SAAlB,CADmB,CAEnB,CAAEC,OAAO,CAAEH,KAAX,CAFmB,CAFvB,CAME,aAAa,CAAE,wBAAM,CACnBF,aAAa,CAACH,IAAI,CAACS,EAAN,CAAb,CACAH,QAAQ,CAAC,IAAD,CAAR,CACD,CATH,wBAWE,aAAK,SAAS,CAAC,MAAf,wBACE,cACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,QAFZ,CAGE,OAAO,CAAEN,IAAI,CAACO,SAHhB,CAIE,QAAQ,CAAE,0BAAML,CAAAA,cAAc,CAACF,IAAI,CAACS,EAAN,CAApB,EAJZ,EADF,cAOE,uBAAQT,IAAI,CAACU,KAAb,EAPF,cAQE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,SAFZ,CAGE,OAAO,CAAE,yBAAMT,CAAAA,UAAU,CAACD,IAAI,CAACS,EAAN,CAAhB,EAHX,EARF,GAXF,cAyBE,cACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,MAFZ,CAGE,KAAK,CAAET,IAAI,CAACU,KAHd,CAIE,QAAQ,CAAE,kBAAAC,KAAK,QAAIP,CAAAA,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAqBb,IAAI,CAACS,EAA1B,CAAd,EAJjB,CAKE,SAAS,CAAE,mBAACE,KAAD,CAAW,CACpB,GAAIA,KAAK,CAACG,GAAN,GAAc,OAAlB,CAA2B,CACzBR,QAAQ,CAAC,KAAD,CAAR,CACD,CAED,GAAIK,KAAK,CAACG,GAAN,GAAc,QAAlB,CAA4B,CAC1BV,UAAU,CAACJ,IAAI,CAACe,QAAN,CAAgBf,IAAI,CAACS,EAArB,CAAV,CACAH,QAAQ,CAAC,KAAD,CAAR,CACD,CACF,CAdH,EAzBF,GACON,IAAI,CAACS,EADZ,CADF,CA4CD,CArDD,CA+DA,cAAeV,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodoItem = ({\n  todo,\n  deleteTodo,\n  changeComplete,\n  changeEditing,\n  changeItem,\n}) => {\n  const [click, setClick] = useState(false);\n\n  return (\n    <li\n      key={todo.id}\n      className={classNames(\n        { completed: todo.completed },\n        { editing: click },\n      )}\n      onDoubleClick={() => {\n        changeEditing(todo.id);\n        setClick(true);\n      }}\n    >\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={todo.completed}\n          onChange={() => changeComplete(todo.id)}\n        />\n        <label>{todo.title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(todo.id)}\n        />\n      </div>\n      <input\n        type=\"text\"\n        className=\"edit\"\n        value={todo.title}\n        onChange={event => changeItem(event.target.value, todo.id)}\n        onKeyDown={(event) => {\n          if (event.key === 'Enter') {\n            setClick(false);\n          }\n\n          if (event.key === 'Escape') {\n            changeItem(todo.prevText, todo.id);\n            setClick(false);\n          }\n        }}\n      />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf().isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeComplete: PropTypes.func.isRequired,\n  changeEditing: PropTypes.func.isRequired,\n  changeItem: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}