{"ast":null,"code":"var _jsxFileName = \"/Users/oleksijlyashenko/Documents/React/react_todo-app/src/components/TodoItem.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  let {\n    todo,\n    deleteTodo,\n    changeComplete,\n    changeItem\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classNames({\n      completed: todo.completed\n    }) // onDoubleClick={() => }\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"toggle\",\n        checked: todo.completed,\n        onChange: () => changeComplete(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"destroy\",\n        onClick: () => deleteTodo(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n};\n\n_c = TodoItem;\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf().isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeComplete: PropTypes.func.isRequired,\n  changeItem: PropTypes.func.isRequired\n};\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/oleksijlyashenko/Documents/React/react_todo-app/src/components/TodoItem.jsx"],"names":["React","PropTypes","classNames","TodoItem","todo","deleteTodo","changeComplete","changeItem","completed","id","title","propTypes","objectOf","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AAEA,MAAMC,QAAQ,GAAG;AAAA,MAAC;AAChBC,IAAAA,IADgB;AAEhBC,IAAAA,UAFgB;AAGhBC,IAAAA,cAHgB;AAIhBC,IAAAA;AAJgB,GAAD;AAAA,sBAMf;AAEE,IAAA,SAAS,EAAEL,UAAU,CAAC;AAAEM,MAAAA,SAAS,EAAEJ,IAAI,CAACI;AAAlB,KAAD,CAFvB,CAGE;AAHF;AAAA,4BAKE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,OAAO,EAAEJ,IAAI,CAACI,SAHhB;AAIE,QAAA,QAAQ,EAAE,MAAMF,cAAc,CAACF,IAAI,CAACK,EAAN;AAJhC;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBAAQL,IAAI,CAACM;AAAb;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,SAFZ;AAGE,QAAA,OAAO,EAAE,MAAML,UAAU,CAACD,IAAI,CAACK,EAAN;AAH3B;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAmBE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA,KACOL,IAAI,CAACK,EADZ;AAAA;AAAA;AAAA;AAAA,UANe;AAAA,CAAjB;;KAAMN,Q;AA6BNA,QAAQ,CAACQ,SAAT,GAAqB;AACnBP,EAAAA,IAAI,EAAEH,SAAS,CAACW,QAAV,GAAqBC,UADR;AAEnBR,EAAAA,UAAU,EAAEJ,SAAS,CAACa,IAAV,CAAeD,UAFR;AAGnBP,EAAAA,cAAc,EAAEL,SAAS,CAACa,IAAV,CAAeD,UAHZ;AAInBN,EAAAA,UAAU,EAAEN,SAAS,CAACa,IAAV,CAAeD;AAJR,CAArB;AAOA,eAAeV,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodoItem = ({\n  todo,\n  deleteTodo,\n  changeComplete,\n  changeItem,\n}) => (\n  <li\n    key={todo.id}\n    className={classNames({ completed: todo.completed })}\n    // onDoubleClick={() => }\n  >\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        checked={todo.completed}\n        onChange={() => changeComplete(todo.id)}\n      />\n      <label>{todo.title}</label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(todo.id)}\n      />\n    </div>\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodoItem.propTypes = {\n  todo: PropTypes.objectOf().isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  changeComplete: PropTypes.func.isRequired,\n  changeItem: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n"]},"metadata":{},"sourceType":"module"}