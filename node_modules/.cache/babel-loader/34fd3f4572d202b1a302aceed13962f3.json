{"ast":null,"code":"import _toConsumableArray from\"/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Link,useParams}from'react-router-dom';import'./ContactEdit.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ContactEdit=function ContactEdit(_ref){var contacts=_ref.contacts,setContacts=_ref.setContacts;var _useParams=useParams(),personalId=_useParams.personalId;var newContact=contacts.find(function(x){return x.id===+personalId;});var _useState=useState(newContact.firstname),_useState2=_slicedToArray(_useState,2),firstName=_useState2[0],setFirstName=_useState2[1];var _useState3=useState(newContact.lastname),_useState4=_slicedToArray(_useState3,2),lastName=_useState4[0],setLastName=_useState4[1];var _useState5=useState(newContact.city),_useState6=_slicedToArray(_useState5,2),city=_useState6[0],setCity=_useState6[1];var _useState7=useState(newContact.email),_useState8=_slicedToArray(_useState7,2),email=_useState8[0],setEmail=_useState8[1];var _useState9=useState(newContact.tel),_useState10=_slicedToArray(_useState9,2),phone=_useState10[0],setPhone=_useState10[1];var handleSubmit=function handleSubmit(event){event.preventDefault();var change=window.confirm('Do you want to change?');if(change){alert(\"Your contact was changed. Please, click Back.\");var newArr=contacts.map(function(contact){if(contact.id===newContact.id){var oldContact=_objectSpread({},contact);contact.firstname=firstName;contact.lastName=lastName;contact.email=email;contact.tel=phone;contact.prev=oldContact;}return contact;});setContacts(_toConsumableArray(newArr));}else{alert(\"Your contact wasn't change. Please, click Back.\");setFirstName(newContact.firstName);setLastName(newContact.lastName);setCity(newContact.city);setEmail(newContact.email);setPhone(newContact.tel);}console.log(contacts);};var changeContact=function changeContact(){if(newContact.prev!==undefined){setFirstName(newContact.prev.firstname);setLastName(newContact.prev.lastname);setCity(newContact.prev.city);setEmail(newContact.prev.email);setPhone(newContact.prev.tel);}};return/*#__PURE__*/_jsx(_Fragment,{children:newContact&&/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(event){return handleSubmit(event);},className:\"form\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:firstName,onChange:function onChange(event){setFirstName(event.target.value);},className:\"form__field\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:lastName,onChange:function onChange(event){setLastName(event.target.value);},className:\"form__field\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:city,onChange:function onChange(event){setCity(event.target.value);},className:\"form__field\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:function onChange(event){setEmail(event.target.value);},className:\"form__field\",required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",pattern:\"[0-9]{3}[0-9]{3}[0-9]{4}\",value:phone,onChange:function onChange(event){setPhone(event.target.value);},className:\"form__field\",required:true}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"button__edit\",children:\"Change\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",children:/*#__PURE__*/_jsx(\"button\",{className:\"button__edit\",children:\"Back\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"button__edit button__edit-return\",onClick:changeContact,children:\"Return\"})]})]})})});};export default ContactEdit;","map":{"version":3,"sources":["/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/src/components/ContactEdit/ContactEdit.jsx"],"names":["React","useState","Link","useParams","ContactEdit","contacts","setContacts","personalId","newContact","find","x","id","firstname","firstName","setFirstName","lastname","lastName","setLastName","city","setCity","email","setEmail","tel","phone","setPhone","handleSubmit","event","preventDefault","change","window","confirm","alert","newArr","map","contact","oldContact","prev","console","log","changeContact","undefined","target","value"],"mappings":"wdAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,SAAf,KAAgC,kBAAhC,CACA,MAAO,oBAAP,C,6IAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAA6B,IAA3BC,CAAAA,QAA2B,MAA3BA,QAA2B,CAAjBC,WAAiB,MAAjBA,WAAiB,CAC/C,eAAuBH,SAAS,EAAhC,CAAQI,UAAR,YAAQA,UAAR,CAEA,GAAIC,CAAAA,UAAU,CAAGH,QAAQ,CAACI,IAAT,CAAc,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,EAAF,GAAS,CAACJ,UAAd,EAAf,CAAjB,CAEA,cAAkCN,QAAQ,CAACO,UAAU,CAACI,SAAZ,CAA1C,wCAAOC,SAAP,eAAkBC,YAAlB,eACA,eAAgCb,QAAQ,CAACO,UAAU,CAACO,QAAZ,CAAxC,yCAAOC,QAAP,eAAiBC,WAAjB,eACA,eAAwBhB,QAAQ,CAACO,UAAU,CAACU,IAAZ,CAAhC,yCAAOA,IAAP,eAAaC,OAAb,eACA,eAA0BlB,QAAQ,CAACO,UAAU,CAACY,KAAZ,CAAlC,yCAAOA,KAAP,eAAcC,QAAd,eACA,eAA0BpB,QAAQ,CAACO,UAAU,CAACc,GAAZ,CAAlC,0CAAOC,KAAP,gBAAcC,QAAd,gBAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9BA,KAAK,CAACC,cAAN,GAEA,GAAIC,CAAAA,MAAM,CAAGC,MAAM,CAACC,OAAP,CAAe,wBAAf,CAAb,CAEA,GAAIF,MAAJ,CAAY,CACVG,KAAK,iDAAL,CAEA,GAAMC,CAAAA,MAAM,CAAG3B,QAAQ,CAAC4B,GAAT,CAAa,SAAAC,OAAO,CAAI,CACrC,GAAIA,OAAO,CAACvB,EAAR,GAAeH,UAAU,CAACG,EAA9B,CAAkC,CAChC,GAAMwB,CAAAA,UAAU,kBAAOD,OAAP,CAAhB,CAEAA,OAAO,CAACtB,SAAR,CAAoBC,SAApB,CACAqB,OAAO,CAAClB,QAAR,CAAmBA,QAAnB,CACAkB,OAAO,CAACd,KAAR,CAAgBA,KAAhB,CACAc,OAAO,CAACZ,GAAR,CAAcC,KAAd,CACAW,OAAO,CAACE,IAAR,CAAeD,UAAf,CACD,CAED,MAAOD,CAAAA,OAAP,CACD,CAZc,CAAf,CAcA5B,WAAW,oBAAK0B,MAAL,EAAX,CACD,CAlBD,IAkBO,CACLD,KAAK,mDAAL,CAEAjB,YAAY,CAACN,UAAU,CAACK,SAAZ,CAAZ,CACAI,WAAW,CAACT,UAAU,CAACQ,QAAZ,CAAX,CACAG,OAAO,CAACX,UAAU,CAACU,IAAZ,CAAP,CACAG,QAAQ,CAACb,UAAU,CAACY,KAAZ,CAAR,CACAI,QAAQ,CAAChB,UAAU,CAACc,GAAZ,CAAR,CACD,CAEDe,OAAO,CAACC,GAAR,CAAYjC,QAAZ,EACD,CAlCD,CAoCA,GAAMkC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,GAAI/B,UAAU,CAAC4B,IAAX,GAAoBI,SAAxB,CAAmC,CAEjC1B,YAAY,CAACN,UAAU,CAAC4B,IAAX,CAAgBxB,SAAjB,CAAZ,CACAK,WAAW,CAACT,UAAU,CAAC4B,IAAX,CAAgBrB,QAAjB,CAAX,CACAI,OAAO,CAACX,UAAU,CAAC4B,IAAX,CAAgBlB,IAAjB,CAAP,CACAG,QAAQ,CAACb,UAAU,CAAC4B,IAAX,CAAgBhB,KAAjB,CAAR,CACAI,QAAQ,CAAChB,UAAU,CAAC4B,IAAX,CAAgBd,GAAjB,CAAR,CACD,CACF,CATD,CAWA,mBACE,yBACGd,UAAU,eACT,sCACE,cACE,QAAQ,CAAE,kBAAAkB,KAAK,QAAID,CAAAA,YAAY,CAACC,KAAD,CAAhB,EADjB,CAEE,SAAS,CAAC,MAFZ,wBAKE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAEb,SAFT,CAGE,QAAQ,CAAE,kBAAAa,KAAK,CAAI,CACjBZ,YAAY,CAACY,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAZ,CACD,CALH,CAME,SAAS,CAAC,aANZ,CAOE,QAAQ,KAPV,EALF,cAeE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAE1B,QAFT,CAGE,QAAQ,CAAE,kBAAAU,KAAK,CAAI,CACjBT,WAAW,CAACS,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAX,CACD,CALH,CAME,SAAS,CAAC,aANZ,CAOE,QAAQ,KAPV,EAfF,cAyBE,cACE,IAAI,CAAC,MADP,CAEE,KAAK,CAAExB,IAFT,CAGE,QAAQ,CAAE,kBAAAQ,KAAK,CAAI,CACjBP,OAAO,CAACO,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAP,CACD,CALH,CAME,SAAS,CAAC,aANZ,CAOE,QAAQ,KAPV,EAzBF,cAmCE,cACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAEtB,KAFT,CAGE,QAAQ,CAAE,kBAAAM,KAAK,CAAI,CACjBL,QAAQ,CAACK,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAR,CACD,CALH,CAME,SAAS,CAAC,aANZ,CAOE,QAAQ,KAPV,EAnCF,cA6CE,cACE,IAAI,CAAC,KADP,CAEE,OAAO,CAAC,0BAFV,CAGE,KAAK,CAAEnB,KAHT,CAIE,QAAQ,CAAE,kBAAAG,KAAK,CAAI,CACjBF,QAAQ,CAACE,KAAK,CAACe,MAAN,CAAaC,KAAd,CAAR,CACD,CANH,CAOE,SAAS,CAAC,aAPZ,CAQE,QAAQ,KARV,EA7CF,cAwDE,oCACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,cAAhC,oBADF,cAGE,KAAC,IAAD,EAAM,EAAE,CAAC,GAAT,uBACE,eAAQ,SAAS,CAAC,cAAlB,kBADF,EAHF,cASE,eACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,kCAFZ,CAGE,OAAO,CAAEH,aAHX,oBATF,GAxDF,GADF,EAFJ,EADF,CAkFD,CA5ID,CA8IA,cAAenC,CAAAA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './ContactEdit.scss';\n\nconst ContactEdit = ({contacts, setContacts}) => {\n  const { personalId } = useParams();\n\n  let newContact = contacts.find(x => x.id === +personalId);\n\n  const [firstName, setFirstName] = useState(newContact.firstname);\n  const [lastName, setLastName] = useState(newContact.lastname);\n  const [city, setCity] = useState(newContact.city);\n  const [email, setEmail] = useState(newContact.email);\n  const [phone, setPhone] = useState(newContact.tel);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let change = window.confirm('Do you want to change?');\n\n    if (change) {\n      alert(`Your contact was changed. Please, click Back.`);\n\n      const newArr = contacts.map(contact => {\n        if (contact.id === newContact.id) {\n          const oldContact = {...contact};\n\n          contact.firstname = firstName;\n          contact.lastName = lastName;\n          contact.email = email;\n          contact.tel = phone;\n          contact.prev = oldContact;\n        }\n\n        return contact;\n      })\n\n      setContacts([...newArr])\n    } else {\n      alert(`Your contact wasn't change. Please, click Back.`);\n\n      setFirstName(newContact.firstName)\n      setLastName(newContact.lastName)\n      setCity(newContact.city)\n      setEmail(newContact.email)\n      setPhone(newContact.tel)\n    }\n\n    console.log(contacts);\n  }\n\n  const changeContact = () => {\n    if (newContact.prev !== undefined) {\n      \n      setFirstName(newContact.prev.firstname)\n      setLastName(newContact.prev.lastname)\n      setCity(newContact.prev.city)\n      setEmail(newContact.prev.email)\n      setPhone(newContact.prev.tel)\n    }\n  }\n\n  return (\n    <>\n      {newContact && (\n        <>\n          <form \n            onSubmit={event => handleSubmit(event)}\n            className='form'\n          >\n\n            <input\n              type=\"text\"\n              value={firstName}\n              onChange={event => {\n                setFirstName(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"text\"\n              value={lastName}\n              onChange={event => {\n                setLastName(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"text\"\n              value={city}\n              onChange={event => {\n                setCity(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"email\"\n              value={email}\n              onChange={event => {\n                setEmail(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input \n              type=\"tel\"\n              pattern='[0-9]{3}[0-9]{3}[0-9]{4}'\n              value={phone}\n              onChange={event => {\n                setPhone(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <div>\n              <button type='submit' className='button__edit'>Change</button>\n\n              <Link to='/'>\n                <button className='button__edit'>\n                  Back\n                </button>\n              </Link>\n\n              <button\n                type='button'\n                className='button__edit button__edit-return'\n                onClick={changeContact}\n              >\n                Return\n              </button>\n            </div>\n          </form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ContactEdit;"]},"metadata":{},"sourceType":"module"}