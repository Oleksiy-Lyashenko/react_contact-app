{"ast":null,"code":"var _jsxFileName = \"/Users/oleksijlyashenko/Documents/React/react_todo-app/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [newTodo, setNewTodo] = useState();\n  const [listTodo, setListTodo] = useState([]);\n\n  const handleEvent = event => {\n    event.preventDefault();\n    const task = {\n      id: +new Date(),\n      title: newTodo,\n      completed: false,\n      editing: false,\n      prevText: ''\n    };\n    setListTodo([...listTodo, task]);\n    setNewTodo('');\n  };\n\n  const deleteTodo = todoId => {\n    const newArr = listTodo.filter(todo => todo.id !== todoId);\n    setListTodo(newArr);\n  };\n\n  const changeComplete = todoId => {\n    setListTodo(listTodo.map(todo => {\n      if (todo.id === todoId) {\n        const handle = todo.completed;\n        return { ...todo,\n          completed: !handle\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeItem = (abc, todoId) => {\n    setListTodo(listTodo.map(todo => {\n      if (todo.id === todoId) {\n        const next = abc;\n        return { ...todo,\n          title: next\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeEditing = todoId => {\n    setListTodo(listTodo.map(todo => {\n      if (todo.id === todoId) {\n        return { ...todo,\n          prevText: todo.title\n        };\n      }\n\n      return todo;\n    }));\n  };\n\n  const allComplete = () => {\n    if (listTodo.find(todo => todo.completed !== true)) {\n      const newArr = listTodo.map(todo => ({ ...todo,\n        completed: true\n      }));\n      return setListTodo(newArr);\n    }\n\n    return setListTodo(listTodo.map(todo => {\n      const handle = todo.completed;\n      return { ...todo,\n        completed: !handle\n      };\n    }));\n  };\n\n  const clearCompleted = () => {\n    setListTodo(listTodo.filter(todo => todo.completed !== true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"todoapp\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEvent,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"new-todo\",\n          placeholder: \"What needs to be done?\",\n          value: newTodo,\n          onChange: event => setNewTodo(event.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), listTodo.length > 0 && /*#__PURE__*/_jsxDEV(TodoList, {\n      items: listTodo,\n      deleteTodo: deleteTodo,\n      changeComplete: changeComplete,\n      allComplete: allComplete,\n      clearCompleted: clearCompleted,\n      changeItem: changeItem,\n      changeEditing: changeEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"531CX1/JBIVoUJFmfrgdupAVy8A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/oleksijlyashenko/Documents/React/react_todo-app/src/App.jsx"],"names":["React","useState","TodoList","App","newTodo","setNewTodo","listTodo","setListTodo","handleEvent","event","preventDefault","task","id","Date","title","completed","editing","prevText","deleteTodo","todoId","newArr","filter","todo","changeComplete","map","handle","changeItem","abc","next","changeEditing","allComplete","find","clearCompleted","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState();\n  const [listTodo, setListTodo] = useState([]);\n\n  const handleEvent = (event) => {\n    event.preventDefault();\n\n    const task = {\n      id: (+new Date()),\n      title: newTodo,\n      completed: false,\n      editing: false,\n      prevText: '',\n    };\n\n    setListTodo([...listTodo, task]);\n    setNewTodo('');\n  };\n\n  const deleteTodo = (todoId) => {\n    const newArr = listTodo.filter(\n      todo => todo.id !== todoId,\n    );\n\n    setListTodo(newArr);\n  };\n\n  const changeComplete = (todoId) => {\n    setListTodo(\n      listTodo.map((todo) => {\n        if (todo.id === todoId) {\n          const handle = todo.completed;\n\n          return {\n            ...todo,\n            completed: !handle,\n          };\n        }\n\n        return todo;\n      }),\n    );\n  };\n\n  const changeItem = (abc, todoId) => {\n    setListTodo(\n      listTodo.map((todo) => {\n        if (todo.id === todoId) {\n          const next = abc;\n\n          return {\n            ...todo,\n            title: next,\n          };\n        }\n\n        return todo;\n      }),\n    );\n  };\n\n  const changeEditing = (todoId) => {\n    setListTodo(\n      listTodo.map((todo) => {\n        if (todo.id === todoId) {\n          return {\n            ...todo,\n            prevText: todo.title,\n          };\n        }\n\n        return todo;\n      }),\n    );\n  };\n\n  const allComplete = () => {\n    if (listTodo.find(todo => todo.completed !== true)) {\n      const newArr = listTodo.map(todo => (\n        {\n          ...todo,\n          completed: true,\n        }\n      ));\n\n      return setListTodo(newArr);\n    }\n\n    return setListTodo(\n      listTodo.map((todo) => {\n        const handle = todo.completed;\n\n        return {\n          ...todo,\n          completed: !handle,\n        };\n      }),\n    );\n  };\n\n  const clearCompleted = () => {\n    setListTodo(\n      listTodo.filter(\n        todo => todo.completed !== true,\n      ),\n    );\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleEvent}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onChange={event => setNewTodo(event.target.value)}\n            required\n          />\n        </form>\n      </header>\n\n      {listTodo.length > 0 && (\n        <TodoList\n          items={listTodo}\n          deleteTodo={deleteTodo}\n          changeComplete={changeComplete}\n          allComplete={allComplete}\n          clearCompleted={clearCompleted}\n          changeItem={changeItem}\n          changeEditing={changeEditing}\n        />\n      )}\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}