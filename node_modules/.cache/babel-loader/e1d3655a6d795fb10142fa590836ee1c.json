{"ast":null,"code":"import _objectSpread from\"/Users/oleksijlyashenko/Documents/React/react_todo-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/oleksijlyashenko/Documents/React/react_todo-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/oleksijlyashenko/Documents/React/react_todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import TodoList from'./components/TodoList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),newTodo=_useState2[0],setNewTodo=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),listTodo=_useState4[0],setListTodo=_useState4[1];var handleEvent=function handleEvent(event){event.preventDefault();var task={id:+new Date(),title:newTodo,completed:false};setListTodo([].concat(_toConsumableArray(listTodo),[task]));setNewTodo('');};var deleteTodo=function deleteTodo(todoId){var newArr=listTodo.filter(function(todo){return todo.id!==todoId;});setListTodo(newArr);};var changeComplete=function changeComplete(todoId){setListTodo(listTodo.map(function(todo){if(todo.id===todoId){var handle=todo.completed;return _objectSpread(_objectSpread({},todo),{},{completed:!handle});}return todo;}));};var allComplete=function allComplete(){if(listTodo.find(function(todo){return todo.completed!==true;})){var newArr=listTodo.map(function(todo){return _objectSpread(_objectSpread({},todo),{},{completed:true});});return setListTodo(newArr);}return setListTodo(listTodo.map(function(todo){var handle=todo.completed;return _objectSpread(_objectSpread({},todo),{},{completed:!handle});}));};var clearCompleted=function clearCompleted(){setListTodo(listTodo.filter(function(todo){return todo.completed!==true;}));};return/*#__PURE__*/_jsxs(\"section\",{className:\"todoapp\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"todos\"}),/*#__PURE__*/_jsx(\"form\",{onSubmit:handleEvent,children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"new-todo\",placeholder:\"What needs to be done?\",value:newTodo,onChange:function onChange(event){return setNewTodo(event.target.value);},required:true})})]}),listTodo.length>0&&/*#__PURE__*/_jsx(TodoList,{items:listTodo,deleteTodo:deleteTodo,changeComplete:changeComplete,allComplete:allComplete,clearCompleted:clearCompleted})]});}export default App;","map":{"version":3,"sources":["/Users/oleksijlyashenko/Documents/React/react_todo-app/src/App.jsx"],"names":["React","useState","TodoList","App","newTodo","setNewTodo","listTodo","setListTodo","handleEvent","event","preventDefault","task","id","Date","title","completed","deleteTodo","todoId","newArr","filter","todo","changeComplete","map","handle","allComplete","find","clearCompleted","target","value","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState();\n  const [listTodo, setListTodo] = useState([]);\n\n  const handleEvent = (event) => {\n    event.preventDefault();\n\n    const task = {\n      id: (+new Date()),\n      title: newTodo,\n      completed: false,\n    };\n\n    setListTodo([...listTodo, task]);\n    setNewTodo('');\n  };\n\n  const deleteTodo = (todoId) => {\n    const newArr = listTodo.filter(\n      todo => todo.id !== todoId,\n    );\n\n    setListTodo(newArr);\n  };\n\n  const changeComplete = (todoId) => {\n    setListTodo(\n      listTodo.map((todo) => {\n        if (todo.id === todoId) {\n          const handle = todo.completed;\n\n          return {\n            ...todo,\n            completed: !handle,\n          };\n        }\n\n        return todo;\n      }),\n    );\n  };\n\n  const allComplete = () => {\n    if (listTodo.find(todo => todo.completed !== true)) {\n      const newArr = listTodo.map(todo => (\n        {\n          ...todo,\n          completed: true,\n        }\n      ));\n\n      return setListTodo(newArr);\n    }\n\n    return setListTodo(\n      listTodo.map((todo) => {\n        const handle = todo.completed;\n\n        return {\n          ...todo,\n          completed: !handle,\n        };\n      }),\n    );\n  };\n\n  const clearCompleted = () => {\n    setListTodo(\n      listTodo.filter(\n        todo => todo.completed !== true,\n      ),\n    );\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form onSubmit={handleEvent}>\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={newTodo}\n            onChange={event => setNewTodo(event.target.value)}\n            required\n          />\n        </form>\n      </header>\n\n      {listTodo.length > 0 && (\n        <TodoList\n          items={listTodo}\n          deleteTodo={deleteTodo}\n          changeComplete={changeComplete}\n          allComplete={allComplete}\n          clearCompleted={clearCompleted}\n        />\n      )}\n    </section>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}