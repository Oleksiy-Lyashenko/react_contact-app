{"ast":null,"code":"var _jsxFileName = \"/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/src/components/ContactEdit/ContactEdit.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './ContactEdit.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactEdit = _ref => {\n  _s();\n\n  let {\n    contacts,\n    setContacts\n  } = _ref;\n  const {\n    personalId\n  } = useParams();\n  let newContact = contacts.find(x => x.id === +personalId);\n  const [firstName, setFirstName] = useState(newContact.firstname);\n  const [lastName, setLastName] = useState(newContact.lastname);\n  const [newCity, setCity] = useState(newContact.city);\n  const [email, setEmail] = useState(newContact.email);\n  const [phone, setPhone] = useState(newContact.tel);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    let change = window.confirm('Do you want to change?');\n\n    if (change) {\n      alert(`Your contact was changed. Please, click Back.`);\n      const newArr = contacts.map(contact => {\n        if (contact.id === newContact.id) {\n          const oldContact = { ...contact\n          };\n          contact.firstname = firstName;\n          contact.lastname = lastName;\n          contact.city = city;\n          contact.email = email;\n          contact.tel = phone;\n          contact.prev = oldContact;\n        }\n\n        return contact;\n      });\n      setContacts([...newArr]);\n    } else {\n      alert(`Your contact wasn't change. Please, click Back.`);\n      setFirstName(newContact.firstName);\n      setLastName(newContact.lastName);\n      setCity(newContact.city);\n      setEmail(newContact.email);\n      setPhone(newContact.tel);\n    }\n\n    console.log(contacts);\n  };\n\n  const changeContact = () => {\n    if (newContact.prev !== undefined) {\n      setFirstName(newContact.prev.firstname);\n      setLastName(newContact.prev.lastname);\n      setCity(newContact.prev.city);\n      setEmail(newContact.prev.email);\n      setPhone(newContact.prev.tel);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: newContact && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: event => handleSubmit(event),\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: firstName,\n          onChange: event => {\n            setFirstName(event.target.value);\n          },\n          className: \"form__field\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: lastName,\n          onChange: event => {\n            setLastName(event.target.value);\n          },\n          className: \"form__field\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: city,\n          onChange: event => {\n            setCity(event.target.value);\n          },\n          className: \"form__field\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: event => {\n            setEmail(event.target.value);\n          },\n          className: \"form__field\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          pattern: \"[0-9]{3}[0-9]{3}[0-9]{4}\",\n          value: phone,\n          onChange: event => {\n            setPhone(event.target.value);\n          },\n          className: \"form__field\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"button__edit\",\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/react_contact-app/\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button__edit\",\n              children: \"Back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button__edit button__edit-return\",\n            onClick: changeContact,\n            children: \"Return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(ContactEdit, \"/zvvbIUaSjK4BELkVYeDZ8lWhpE=\", false, function () {\n  return [useParams];\n});\n\n_c = ContactEdit;\nexport default ContactEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactEdit\");","map":{"version":3,"sources":["/Users/oleksijlyashenko/Documents/projects_from_git/react_contact-app/src/components/ContactEdit/ContactEdit.jsx"],"names":["React","useState","Link","useParams","ContactEdit","contacts","setContacts","personalId","newContact","find","x","id","firstName","setFirstName","firstname","lastName","setLastName","lastname","newCity","setCity","city","email","setEmail","phone","setPhone","tel","handleSubmit","event","preventDefault","change","window","confirm","alert","newArr","map","contact","oldContact","prev","console","log","changeContact","undefined","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport './ContactEdit.scss';\n\nconst ContactEdit = ({contacts, setContacts}) => {\n  const { personalId } = useParams();\n\n  let newContact = contacts.find(x => x.id === +personalId);\n\n  const [firstName, setFirstName] = useState(newContact.firstname);\n  const [lastName, setLastName] = useState(newContact.lastname);\n  const [newCity, setCity] = useState(newContact.city);\n  const [email, setEmail] = useState(newContact.email);\n  const [phone, setPhone] = useState(newContact.tel);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    let change = window.confirm('Do you want to change?');\n\n    if (change) {\n      alert(`Your contact was changed. Please, click Back.`);\n\n      const newArr = contacts.map(contact => {\n        if (contact.id === newContact.id) {\n          const oldContact = {...contact};\n\n          contact.firstname = firstName;\n          contact.lastname = lastName;\n          contact.city = city;\n          contact.email = email;\n          contact.tel = phone;\n          contact.prev = oldContact;\n        }\n\n        return contact;\n      })\n\n      setContacts([...newArr])\n    } else {\n      alert(`Your contact wasn't change. Please, click Back.`);\n\n      setFirstName(newContact.firstName)\n      setLastName(newContact.lastName)\n      setCity(newContact.city)\n      setEmail(newContact.email)\n      setPhone(newContact.tel)\n    }\n\n    console.log(contacts);\n  }\n\n  const changeContact = () => {\n    if (newContact.prev !== undefined) {\n      \n      setFirstName(newContact.prev.firstname)\n      setLastName(newContact.prev.lastname)\n      setCity(newContact.prev.city)\n      setEmail(newContact.prev.email)\n      setPhone(newContact.prev.tel)\n    }\n  }\n\n  return (\n    <>\n      {newContact && (\n        <>\n          <form \n            onSubmit={event => handleSubmit(event)}\n            className='form'\n          >\n\n            <input\n              type=\"text\"\n              value={firstName}\n              onChange={event => {\n                setFirstName(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"text\"\n              value={lastName}\n              onChange={event => {\n                setLastName(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"text\"\n              value={city}\n              onChange={event => {\n                setCity(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input\n              type=\"email\"\n              value={email}\n              onChange={event => {\n                setEmail(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <input \n              type=\"tel\"\n              pattern='[0-9]{3}[0-9]{3}[0-9]{4}'\n              value={phone}\n              onChange={event => {\n                setPhone(event.target.value)\n              }}\n              className='form__field'\n              required\n            />\n\n            <div>\n              <button type='submit' className='button__edit'>Change</button>\n\n              <Link to='/react_contact-app/'>\n                <button className='button__edit'>\n                  Back\n                </button>\n              </Link>\n\n              <button\n                type='button'\n                className='button__edit button__edit-return'\n                onClick={changeContact}\n              >\n                Return\n              </button>\n            </div>\n          </form>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default ContactEdit;"]},"metadata":{},"sourceType":"module"}